version: '3.7'

services:

###################################################################################################
#                                            PROMETHEUS                                           #
###################################################################################################
  prometheus:
    image: prom/prometheus:v2.42.0
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - monitor

###################################################################################################
#                                              GRAFANA                                            #
###################################################################################################
  grafana:
    image: grafana/grafana:9.4.3
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-cLaMDjrXrP85giN7}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - monitor

###################################################################################################
#                                           ALERT MANAGER                                         #
###################################################################################################
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    ports:
      - "9093:9093"
    networks:
      - monitor

###################################################################################################
#                                           NODE EXPORTER                                         #
###################################################################################################
  nodeexporter:
    image: prom/node-exporter:v1.5.0
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports:
      - 8090:9100
    networks:
      - monitor

###################################################################################################
#                                             CADVISOR                                            #
###################################################################################################
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    restart: unless-stopped
    ports:
      - 8085:8080
    networks:
      - monitor

###################################################################################################
#                                      PROMETHEUS PUSHGATEWAY                                     #
###################################################################################################
  pushgateway:
    image: prom/pushgateway:v1.5.1
    container_name: pushgateway
    restart: unless-stopped
    ports:
      - 8089:9091
    networks:
      - monitor

###################################################################################################
#                                               LOKI                                              #
###################################################################################################
  loki:
    image: grafana/loki:2.7.4
    container_name: loki
    restart: unless-stopped
    volumes:
    - ./loki/loki-config.yml:/mnt/config/loki-config.yml
    - loki_data:/loki
    user: root
    ports:
    - 3100:3100
    command: 
    - '-config.file=/mnt/config/loki-config.yml'
    networks:
      - monitor

    # Agregar Path en contenedor para que pueda traerse los logs: 
    # logging:
    #   driver: loki
    #   options:
    #     loki-url: "http://localhost:3100/loki/api/v1/push" 
    # 
    # Tambien ejecutar el script .sh que aparece en la carpeta "loki"

###################################################################################################
#                                               LOKI                                              #
###################################################################################################
  promtail:
    image: grafana/promtail:2.7.2
    container_name: promtail
    volumes:
      - ./loki/promtail-docker-config.yaml:/etc/promtail/config.yml
      - /var/log/:/var/log/:ro
      - /home/:/home_server:ro
      - /root/:/root_user:ro
      - promtail_data:/tmp
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitor
### DOCKER NETWORK
networks:
  monitor:
    driver: bridge

### DOCKER VOLUMES
volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  promtail_data:
